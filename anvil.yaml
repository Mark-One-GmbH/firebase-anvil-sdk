dependencies: []
services:
- source: /runtime/services/tables.yml
  client_config: {enable_v2: true}
  server_config: {}
- source: /runtime/services/anvil/users.yml
  client_config: {allow_signup: true, enable_automatically: true, use_email: true,
    confirm_email: false, allow_remember_me: true, remember_me_days: 30}
  server_config: {user_table: users}
startup: {type: module, module: _start}
package_name: Firebase_Anvil_SDK
allow_embedding: false
name: Firebase Anvil SDK
runtime_options: {version: 2, client_version: '3', server_version: python3-full, server_spec: null,
  server_persist: true}
metadata: {title: firebase_anvil}
startup_form: null
native_deps: {head_html: "<script>\nclass Listener{\n  constructor() {\n    this.unsubscribe;\n\
    \    this.callback;\n  }\n  \n  start (ref,callback) {\n    this.callback = callback;\n\
    \    this.unsubscribe = ref.onSnapshot((snapshot) => {\n        var docs = [];\n\
    \        snapshot.forEach((doc) => {docs.push(doc);});\n        this.callback(docs)\n\
    \    }, (error) => {\n        this.callback(error)\n    });    \n  }  \n\n}\n\n\
    //returns a new empty js listener obj\nfunction new_listener() {return new Listener();}\n\
    \  \n</script>\n"}
db_schema:
  users:
    title: Users
    client: none
    server: full
    columns:
    - name: email
      admin_ui: {width: 200}
      type: string
    - name: enabled
      admin_ui: {width: 200}
      type: bool
    - name: last_login
      admin_ui: {width: 200}
      type: datetime
    - name: password_hash
      admin_ui: {width: 200}
      type: string
    - name: n_password_failures
      admin_ui: {width: 200}
      type: number
    - name: confirmed_email
      admin_ui: {width: 200}
      type: bool
    - name: signed_up
      admin_ui: {width: 200}
      type: datetime
    - name: remembered_logins
      admin_ui: {width: 200}
      type: simpleObject
